{"ast":null,"code":"var _jsxFileName = \"/Users/amantiwari/Desktop/geekboyAdmin/src/components/Content/textEditor.js\";\nimport React, { Component } from 'react';\nimport { EditorState, convertFromRaw, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\nclass MyEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onEditorStateChange = editorState => {\n      this.setState({\n        editorState\n      });\n    };\n\n    const html = '<p>Hey this <strong>editor</strong> rocks ðŸ˜€</p>';\n    const contentBlock = htmlToDraft(html);\n\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      const editorState = EditorState.createWithContent(contentState);\n      this.state = {\n        editorState\n      };\n    }\n  } // constructor(props) {\n  //   super(props);\n  //\n  //   this.state = {\n  //\n  //     editorState: EditorState.createEmpty(),\n  //\n  //   }\n  // }\n\n\n  render() {\n    const editorState = this.state.editorState;\n    return React.createElement(Editor, {\n      placeholder: \"PLEASE WRITE HERE\",\n      editorState: editorState,\n      toolbarOnFocus: true,\n      wrapperClassName: \"wrapper-class\",\n      editorClassName: \"editor-class\",\n      toolbarClassName: \"toolbar-class\",\n      onEditorStateChange: this.onEditorStateChange,\n      toolbar: {\n        inline: {\n          inDropdown: true\n        },\n        list: {\n          inDropdown: true\n        },\n        textAlign: {\n          inDropdown: true\n        },\n        link: {\n          inDropdown: true\n        },\n        history: {\n          inDropdown: true\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default MyEditor;","map":{"version":3,"sources":["/Users/amantiwari/Desktop/geekboyAdmin/src/components/Content/textEditor.js"],"names":["React","Component","EditorState","convertFromRaw","convertToRaw","ContentState","Editor","draftToHtml","htmlToDraft","MyEditor","constructor","props","onEditorStateChange","editorState","setState","html","contentBlock","contentState","createFromBlockArray","contentBlocks","createWithContent","state","render","inline","inDropdown","list","textAlign","link","history"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAuBC,cAAvB,EAAuCC,YAAvC,EAAqDC,YAArD,QAAyE,UAAzE;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAO,kDAAP;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;;AAKA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAG/BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SA2BfC,mBA3Be,GA2BkBC,WAAD,IAAiB;AAC/C,WAAKC,QAAL,CAAc;AACZD,QAAAA;AADY,OAAd;AAGD,KA/Bc;;AAElB,UAAME,IAAI,GAAG,kDAAb;AACA,UAAMC,YAAY,GAAGR,WAAW,CAACO,IAAD,CAAhC;;AACA,QAAIC,YAAJ,EAAkB;AAChB,YAAMC,YAAY,GAAGZ,YAAY,CAACa,oBAAb,CAAkCF,YAAY,CAACG,aAA/C,CAArB;AACA,YAAMN,WAAW,GAAGX,WAAW,CAACkB,iBAAZ,CAA8BH,YAA9B,CAApB;AACA,WAAKI,KAAL,GAAa;AACXR,QAAAA;AADW,OAAb;AAGD;AACF,GAd+B,CAgB/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAaIS,EAAAA,MAAM,GAAG;AAAA,UAECT,WAFD,GAEiB,KAAKQ,KAFtB,CAECR,WAFD;AAGJ,WACE,oBAAC,MAAD;AACA,MAAA,WAAW,EAAC,mBADZ;AAEE,MAAA,WAAW,EAAEA,WAFf;AAGE,MAAA,cAAc,MAHhB;AAIG,MAAA,gBAAgB,EAAC,eAJpB;AAKG,MAAA,eAAe,EAAC,cALnB;AAMG,MAAA,gBAAgB,EAAC,eANpB;AAOG,MAAA,mBAAmB,EAAE,KAAKD,mBAP7B;AAUE,MAAA,OAAO,EAAE;AACNW,QAAAA,MAAM,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SADF;AAENC,QAAAA,IAAI,EAAE;AAAED,UAAAA,UAAU,EAAE;AAAd,SAFA;AAGNE,QAAAA,SAAS,EAAE;AAAEF,UAAAA,UAAU,EAAE;AAAd,SAHL;AAING,QAAAA,IAAI,EAAE;AAAEH,UAAAA,UAAU,EAAE;AAAd,SAJA;AAKNI,QAAAA,OAAO,EAAE;AAAEJ,UAAAA,UAAU,EAAE;AAAd;AALH,OAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAoBJ;;AA5D0B;;AAgEjC,eAAef,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { EditorState,  convertFromRaw, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\n\n\n\nclass MyEditor extends Component {\n\n\n  constructor(props) {\n   super(props);\n   const html = '<p>Hey this <strong>editor</strong> rocks ðŸ˜€</p>';\n   const contentBlock = htmlToDraft(html);\n   if (contentBlock) {\n     const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n     const editorState = EditorState.createWithContent(contentState);\n     this.state = {\n       editorState,\n     };\n   }\n }\n\n  // constructor(props) {\n  //   super(props);\n  //\n  //   this.state = {\n  //\n  //     editorState: EditorState.createEmpty(),\n  //\n  //   }\n  // }\n\n\n\n\n\n      onEditorStateChange: Function = (editorState) => {\n        this.setState({\n          editorState,\n        });\n      };\n\n\n      render() {\n\n        const { editorState } = this.state;\n           return (\n             <Editor\n             placeholder='PLEASE WRITE HERE'\n               editorState={editorState}\n               toolbarOnFocus\n                wrapperClassName=\"wrapper-class\"\n                editorClassName=\"editor-class\"\n                toolbarClassName=\"toolbar-class\"\n                onEditorStateChange={this.onEditorStateChange}\n\n\n               toolbar={{\n                  inline: { inDropdown: true },\n                  list: { inDropdown: true },\n                  textAlign: { inDropdown: true },\n                  link: { inDropdown: true },\n                  history: { inDropdown: true }\n               }}\n             />\n           )\n      }\n\n\n}\nexport default MyEditor;\n"]},"metadata":{},"sourceType":"module"}